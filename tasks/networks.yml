---
- name: Set facts
  tags: neutron
  set_fact:
    neutron_auth:
      username: "{{ os_auth.username }}"
      password: "{{ os_auth.password }}"
      auth_url: "{{ os_auth.auth_url }}"
      project_name: "{{ item.key }}"
    neutron_internal_networks: "{{ item.value|rejectattr('provider_network_name', 'defined')|list }}"
    neutron_external_networks: "{{ item.value|selectattr('provider_network_name', 'defined')|list }}"
    neutron_subnets: "{{ item.value }}"

- name: Check state for external networks
  tags: neutron
  always_run: True
  changed_when: False
  register: neutron_registered_external_networks
  with_items: "{{ neutron_external_networks }}"
  command:
    neutron
      --os-username {{ neutron_auth.username }}
      --os-password {{ neutron_auth.password }}
      --os-auth-url {{ neutron_auth.auth_url }}
      --os-project-name {{ neutron_auth.project_name }}
      net-list --name {{ item.name }} -c name -f value

- name: Create external networks
  tags: neutron
  with_items: "{{ neutron_external_networks }}"
  when: "{{ (neutron_registered_external_networks.results|selectattr('item', 'equalto', item.name)|list|first).stdout_lines|string == '0' }}"
  command:
    neutron
      --os-username {{ neutron_auth.username }}
      --os-password {{ neutros_auth.password }}
      --os-auth-url {{ neutros_auth.auth_url }}
      --os-project-name {{ neutron_auth.project_name }}
      net-create {{ item.name }}
        --provider:network_type {{ item.provider_network_type|default('flat')}}
        --provider:physical_network {{ item.provider_network_name }}
        --router:external

- name: Create internal networks
  tags: neutron
  with_items: "{{ neutron_internal_networks }}"
  os_network:
    auth: "{{ neutron_auth }}"
    name: "{{ item.name }}"
    external: False

- name: Create subnets
  tags: neutron
  with_items: "{{ neutron_subnets }}"
  os_subnet:
    auth: "{{ neutron_auth }}"
    name: "{{ item.name ~ '_subnet'}}"
    network_name: "{{ item.name }}"
    allocation_pool_start:  "{{ item.allocation_pool.start }}"
    allocation_pool_end: "{{ item.allocation_pool.end }}"
    cidr: "{{ item.cidr }}"
    dns_nameservers: "{{ item.dns_nameservers|default(omit)}}"
    enable_dhcp: "{{ item.enable_dhcp|default(omit)}}"
    gateway_ip: "{{ item.gateway_ip|default(omit)}}"

- name: Create routerport
  tags: neutron
  with_items: "{{ neutron_internal_networks }}"
  when: "{{ item.external_netname is defined }}"
  os_router:
    auth: "{{ neutron_auth }}"
    # Must be site unique.....
    name: "{{ neutron_auth.project_name ~ '_router_' ~ item.external_netname }}"
    network: "{{ item.external_netname }}"
    interfaces: "{{ item.name ~ '_subnet'}}"
